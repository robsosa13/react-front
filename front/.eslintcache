[{"D:\\Roberto\\PROYECTO KD\\react-front\\front\\src\\index.js":"1","D:\\Roberto\\PROYECTO KD\\react-front\\front\\src\\components\\Footer.js":"2","D:\\Roberto\\PROYECTO KD\\react-front\\front\\src\\components\\Header.js":"3","D:\\Roberto\\PROYECTO KD\\react-front\\front\\src\\products.js":"4","D:\\ROBERTO\\PROYECTO KD\\react-front\\front\\src\\index.js":"5","D:\\ROBERTO\\PROYECTO KD\\react-front\\front\\src\\components\\MarcaHora.js":"6","D:\\ROBERTO\\PROYECTO KD\\react-front\\front\\src\\components\\Footer.js":"7","D:\\ROBERTO\\PROYECTO KD\\react-front\\front\\src\\components\\Index.js":"8","D:\\ROBERTO\\PROYECTO KD\\react-front\\front\\src\\components\\EmpleadoPlanilla.js":"9","D:\\ROBERTO\\PROYECTO KD\\react-front\\front\\src\\components\\Header.js":"10","D:\\ROBERTO\\PROYECTO KD\\react-front\\front\\src\\components\\Rating.js":"11","D:\\ROBERTO\\PROYECTO KD\\react-front\\front\\src\\App.js":"12","D:\\ROBERTO\\PROYECTO KD\\react-front\\front\\src\\components\\PlanillaMaster.js":"13","D:\\ROBERTO\\PROYECTO KD\\react-front\\front\\src\\components\\Planillas.js":"14","D:\\ROBERTO\\PROYECTO KD\\react-front\\front\\src\\reportWebVitals.js":"15","D:\\ROBERTO\\PROYECTO KD\\react-front\\front\\src\\components\\Modal1.js":"16","D:\\ROBERTO\\PROYECTO KD\\react-front\\front\\src\\components\\Empleados\\EmpleadosMH.js":"17","D:\\ROBERTO\\PROYECTO KD\\react-front\\front\\src\\screens\\ProductSreen.js":"18","D:\\ROBERTO\\PROYECTO KD\\react-front\\front\\src\\products.js":"19","D:\\ROBERTO\\PROYECTO KD\\react-front\\front\\src\\components\\test.js":"20","D:\\ROBERTO\\PROYECTO KD\\react-front\\front\\src\\components\\Calendario\\IndexCalendario.js":"21","D:\\ROBERTO\\PROYECTO KD\\react-front\\front\\src\\screens\\HomeScreen.js":"22","D:\\ROBERTO\\PROYECTO KD\\react-front\\front\\src\\components\\excel.js":"23"},{"size":544,"mtime":1610655059955,"results":"24","hashOfConfig":"25"},{"size":444,"mtime":1610574087339,"results":"26","hashOfConfig":"25"},{"size":1683,"mtime":1610992402719,"results":"27","hashOfConfig":"25"},{"size":2976,"mtime":1610727484789,"results":"28","hashOfConfig":"25"},{"size":590,"mtime":1611078180717,"results":"29","hashOfConfig":"30"},{"size":508,"mtime":1611091069535,"results":"31","hashOfConfig":"30"},{"size":444,"mtime":1610574087339,"results":"32","hashOfConfig":"30"},{"size":1203,"mtime":1610992902815,"results":"33","hashOfConfig":"30"},{"size":14392,"mtime":1611866871465,"results":"34","hashOfConfig":"30"},{"size":1954,"mtime":1611148062315,"results":"35","hashOfConfig":"30"},{"size":2333,"mtime":1610717220172,"results":"36","hashOfConfig":"30"},{"size":1565,"mtime":1612015155906,"results":"37","hashOfConfig":"30"},{"size":17778,"mtime":1612189567060,"results":"38","hashOfConfig":"30"},{"size":20361,"mtime":1612194567650,"results":"39","hashOfConfig":"30"},{"size":362,"mtime":1609361779397,"results":"40","hashOfConfig":"30"},{"size":1431,"mtime":1611089136095,"results":"41","hashOfConfig":"30"},{"size":9401,"mtime":1611945322047,"results":"42","hashOfConfig":"30"},{"size":2927,"mtime":1612015177013,"results":"43","hashOfConfig":"30"},{"size":2976,"mtime":1610727484789,"results":"44","hashOfConfig":"30"},{"size":3080,"mtime":1611179163206,"results":"45","hashOfConfig":"30"},{"size":3130,"mtime":1611689681497,"results":"46","hashOfConfig":"30"},{"size":3096,"mtime":1610748379222,"results":"47","hashOfConfig":"30"},{"size":2908,"mtime":1611861080065,"results":"48","hashOfConfig":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"9ojaxw",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"60"},"b5f4u8",{"filePath":"61","messages":"62","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"60"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"60"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"60"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"60"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"60"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"60"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"D:\\Roberto\\PROYECTO KD\\react-front\\front\\src\\index.js",["106"],"D:\\Roberto\\PROYECTO KD\\react-front\\front\\src\\components\\Footer.js",[],"D:\\Roberto\\PROYECTO KD\\react-front\\front\\src\\components\\Header.js",[],"D:\\Roberto\\PROYECTO KD\\react-front\\front\\src\\products.js",[],"D:\\ROBERTO\\PROYECTO KD\\react-front\\front\\src\\index.js",["107"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport bootstrap from './bootstrap.min.css'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["108","109"],"D:\\ROBERTO\\PROYECTO KD\\react-front\\front\\src\\components\\MarcaHora.js",["110","111","112","113"],"import React, { Component } from 'react'\r\nimport { Container, Table, Jumbotron, Button } from 'react-bootstrap';\r\n\r\n//import products from '../planilla/products'\r\nclass MarcaHora extends Component {\r\n    constructor(...props) {\r\n        super(...props);\r\n        this.state = {\r\n        }\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <>\r\n                <h1>test</h1>\r\n               {/* <CalendarioForm></CalendarioForm> */}\r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default MarcaHora\r\n    ","D:\\ROBERTO\\PROYECTO KD\\react-front\\front\\src\\components\\Footer.js",[],["114","115"],"D:\\ROBERTO\\PROYECTO KD\\react-front\\front\\src\\components\\Index.js",[],"D:\\ROBERTO\\PROYECTO KD\\react-front\\front\\src\\components\\EmpleadoPlanilla.js",["116","117","118","119","120","121"],"import React, { Component } from 'react'\r\nimport { Table, Modal, Container, ModalBody, ModalFooter, Button, Form, Row, Col } from 'react-bootstrap';\r\n//import \"bootstrap/dist/css/bootstrap.min.css\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons'\r\nimport axios from 'axios'\r\nimport Modal1 from './Modal1'\r\nclass EmpleadoPlanilla extends Component {\r\n    constructor(...props) {\r\n        super(...props);\r\n        this.state = {\r\n            empleadoP: [],\r\n            show: false,\r\n            showModalEliminar: false,\r\n            form: {\r\n                idusuario: \"\",\r\n                nombres: \"\",\r\n                apellidoP: \"\",\r\n                apellidoM: \"\",\r\n                CI: \"\",\r\n                exp: \"\",\r\n                fecha_nacimiento: \"\",\r\n                sexo: \"\",\r\n                ocupacion: \"\",\r\n                fecha_ingreso: \"\",\r\n                fecha_salida: \"\",\r\n                haber_basico: \"\",\r\n                tipoModal: \"\"\r\n            }\r\n        }\r\n    }\r\n    cargarDatos() {\r\n        fetch('http://localhost:4201/api/empleado-planilla',\r\n            {\r\n                method: \"GET\",\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            })\r\n            .then((response) => {\r\n                return response.json()\r\n            })\r\n            .then((res) => {\r\n                this.setState({\r\n                    empleadoP: res.empleadoP\r\n                })\r\n            })\r\n            .catch(function (error) {\r\n                console.log('Hubo un problema con la petición:' + error.message);\r\n            });\r\n    }\r\n    componentDidMount() {\r\n        this.cargarDatos();\r\n    }\r\n    handleModal() {\r\n        this.setState({ show: !this.state.show })\r\n    }\r\n\r\n    handleModalEliminar() {\r\n        this.setState({ show: !this.state.showModalEliminar })\r\n    }\r\n    //segundoPlano\r\n    handleChange = async e => {\r\n        e.persist();\r\n        await this.setState({\r\n            form: {\r\n                ...this.state.form,\r\n                [e.target.name]: e.target.value\r\n            }\r\n        })\r\n        console.log(this.state.form)\r\n    }\r\n    peticionPost = async () => {\r\n        await axios.post('http://localhost:4201/api/empleado-planilla/registrar', this.state.form).then(response => {\r\n            this.handleModal();\r\n            this.cargarDatos();\r\n        }).catch(error => {\r\n            console.log(error.message)\r\n        })\r\n    }\r\n    seleccionarEmpleado = (empleado) => {\r\n        console.log('test', empleado)\r\n        this.setState({\r\n            tipoModal: 'actualizar',\r\n            form: {\r\n                idusuario: empleado.idusuario,\r\n                nombres: empleado.nombres,\r\n                apellidoP: empleado.apellidoP,\r\n                apellidoM: empleado.apellidoM,\r\n                CI: empleado.CI,\r\n                exp: empleado.exp,\r\n                fecha_nacimiento: empleado.fecha_nacimiento,\r\n                sexo: empleado.sexo,\r\n                ocupacion: empleado.ocupacion,\r\n                fecha_ingreso: empleado.fecha_ingreso,\r\n                fecha_salida: empleado.fecha_salida,\r\n                haber_basico: empleado.haber_basico\r\n            }\r\n        })\r\n        console.log('test', this.state.form)\r\n    }\r\n    peticionPut = () => {\r\n        axios.put('')\r\n    }\r\n    peticionDelete = () => {\r\n        axios.delete('http://localhost:4201/api/empleado-planilla' + this.state.form._id).then(response => {\r\n            this.setState({ modalEliminar: false });\r\n            this.cargarDatos();\r\n        })\r\n    }\r\n    render() {\r\n        const { empleadoP } = this.state;\r\n        const { form } = this.state\r\n\r\n        return (\r\n            <>\r\n\r\n                <h2>Lista de Empleados</h2>\r\n                <br />\r\n                <button className=\"btn btn-success\" onClick={() => { this.setState({ form: null, tipoModal: 'insertar' }); this.handleModal() }} >Agregar Empleado </button>\r\n                <br />\r\n                <br />\r\n                <Table striped bordered hover>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Nombre</th>\r\n                            <th>Apellido Paterno</th>\r\n                            <th>Apellido Materno</th>\r\n                            <th>C I   </th>\r\n                            <th>Exp</th>\r\n                            <th>Fecha de Nacimiento</th>\r\n                            <th>Sexo</th>\r\n                            <th>Ocupacion</th>\r\n                            <th>Fecha Ingreso Empresa</th>\r\n                            <th>Fecha Salida Empresa</th>\r\n                            <th>Haber Básico</th>\r\n                            <th>Opciones</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            (empleadoP)\r\n                                ?\r\n                                empleadoP.map(item => (\r\n\r\n                                    <tr key={item._id}>\r\n                                        {/* <td>{item.idusuario}</td> */}\r\n                                        <td>{item.nombres}</td>\r\n                                        <td>{item.apellidoP}</td>\r\n                                        <td>{item.apellidoM}</td>\r\n                                        <td>{item.CI}</td>\r\n                                        <td>{item.exp}</td>\r\n                                        <td>{item.fecha_nacimiento}</td>\r\n                                        <td>{item.sexo}</td>\r\n                                        <td>{item.ocupacion}</td>\r\n                                        <td>{item.fecha_ingreso}</td>\r\n                                        <td>{item.fecha_salida}</td>\r\n                                        <td>{item.haber_basico}</td>\r\n                                        <td>\r\n                                            <button className=\"btn btn-primary\" onClick={() => this.seleccionarEmpleado(item)} > <FontAwesomeIcon icon={faEdit}></FontAwesomeIcon>   </button>\r\n                                            {\"   \"}\r\n                                            <Modal1 />\r\n                                            {/* <button className=\"btn btn-danger\" onClick={()=>{this.handleModalEliminar()}}> <FontAwesomeIcon icon={faTrashAlt}></FontAwesomeIcon>   </button> */}\r\n\r\n                                            {/* <button className=\"btn btn-success\" onClick={() => { this.setState({form:null,tipoModal:'insertar'}); this.handleModal() }} >Agregar Empleado </button> */}\r\n\r\n\r\n                                        </td>\r\n                                    </tr>\r\n                                ))\r\n                                :\r\n                                <tr></tr>}\r\n                    </tbody>\r\n                \r\n                </Table>\r\n                <Modal show={this.state.show} onHide={() => this.handleModal()} >\r\n                    <Modal.Header closeButton> Agregar Empleado\r\n                            {/* <Modal.Title>Modal heading</Modal.Title> */}\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Form>\r\n                            <Row>\r\n                                \r\n                                <Col>\r\n                                    <Form.Group controlId=\"formBasicEmail\">\r\n                                        <Form.Label>Nombres</Form.Label>\r\n                                        <input type=\"text\" placeholder=\"nombres\" name=\"nombres\" onChange={this.handleChange} value={form ? form.nombres : ''} />\r\n                                    </Form.Group>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Form.Group controlId=\"formBasictext\">\r\n                                        <Form.Label>Apellido Paterno</Form.Label>\r\n                                        <input type=\"text\" placeholder=\"Apellido Paterno\" name=\"apellidoP\" onChange={this.handleChange} value={form ? form.apellidoP : ''} />\r\n                                    </Form.Group>\r\n                                </Col>\r\n                            </Row>\r\n                            {/* AQUI */}\r\n                            <Row>\r\n                                <Col>\r\n                                    <Form.Group controlId=\"formBasicEmail\">\r\n                                        <Form.Label>Apellido Materno</Form.Label>\r\n                                        <input type=\"text\" placeholder=\"Id Usuario\" name=\"apellidoM\" onChange={this.handleChange} value={form ? form.apellidoM : ''} />\r\n                                    </Form.Group>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Form.Group controlId=\"formBasictext\">\r\n                                        <Form.Label> C I</Form.Label><br></br>\r\n                                        <input type=\"text\" placeholder=\"Ocupacion\" name=\"CI\" onChange={this.handleChange} value={form ? form.CI : ''} />\r\n                                    </Form.Group>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col>\r\n                                    <Form.Group controlId=\"formBasicEmail\">\r\n                                        <Form.Label>Expedido</Form.Label>\r\n                                        <input type=\"text\" placeholder=\"eXP\" name=\"exp\" onChange={this.handleChange} value={form ? form.exp : ''} />\r\n                                    </Form.Group>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Form.Group controlId=\"formBasicEmail\">\r\n                                        <Form.Label>Fecha de Nacimiento</Form.Label>\r\n                                        <input type=\"date\" placeholder=\"Id Usuario\" name=\"fecha_nacimiento\" onChange={this.handleChange} value={form ? form.fecha_nacimiento : ''} />\r\n                                    </Form.Group>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col>\r\n                                    <Form.Group controlId=\"formBasicEmail\">\r\n                                        <Form.Label>Sexo</Form.Label>\r\n                                        <input type=\"text\" placeholder=\"Sexo\" name=\"sexo\" onChange={this.handleChange} value={form ? form.sexo : ''} />\r\n                                    </Form.Group>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Form.Group controlId=\"formBasictext\">\r\n                                        <Form.Label>Ocupación</Form.Label>\r\n                                        <input type=\"text\" placeholder=\"Ocupacion\" name=\"ocupacion\" onChange={this.handleChange} value={form ? form.ocupacion : ''} />\r\n                                    </Form.Group>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col>\r\n                                    <Form.Group controlId=\"formBasictext\">\r\n                                        <Form.Label>Fecha Ingreso a la empresa </Form.Label>\r\n                                        <input type=\"date\"  name=\"fecha_ingreso\" onChange={this.handleChange} value={form ? form.fecha_ingreso : ''} />\r\n                                    </Form.Group>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Form.Group controlId=\"formBasictext\">\r\n                                        <Form.Label>Fecha Fin </Form.Label>\r\n                                        <input type=\"date\" name=\"fecha_salida\" onChange={this.handleChange} value={form ? form.fecha_salida : ''} />\r\n                                    </Form.Group>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col>\r\n                                    <Form.Group controlId=\"formBasicEmail\">\r\n                                        <Form.Label>Haber Básico</Form.Label>\r\n                                        <input type=\"text\" placeholder=\"Haber Basico\" name=\"haber_basico\" onChange={this.handleChange} value={form ? form.haber_basico : ''} />\r\n                                    </Form.Group>\r\n                                </Col>\r\n                                <Col>\r\n\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <button className=\"btn btn-danger\" onClick={() => { this.handleModal() }}>\r\n                            Cancelar\r\n                          </button>\r\n                        {this.state.tipoModal == 'insertar' ?\r\n                            <button className=\"btn btn-success\" onClick={() => this.peticionPost()} >\r\n                                Agregar\r\n                           </button> :\r\n                            <button className=\"btn btn-success\" >\r\n                                Actualizar\r\n                             </button>\r\n                        }\r\n                    </Modal.Footer>\r\n                </Modal>\r\n\r\n                {/* <Modal  show={this.state.showModalEliminar}  onHide={() => this.handleModal()} >\r\n                        <Modal.Header closeButton> Agregar Empleado\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n\r\n                            Are you sure ?\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <button className=\"btn btn-succes\"   >\r\n                                Si\r\n                           </button>\r\n                           <button className=\"btn btn-primary\"  >\r\n                                No\r\n                             </button>\r\n                        </Modal.Footer>\r\n                    </Modal> */}\r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default EmpleadoPlanilla","D:\\ROBERTO\\PROYECTO KD\\react-front\\front\\src\\components\\Header.js",[],"D:\\ROBERTO\\PROYECTO KD\\react-front\\front\\src\\components\\Rating.js",[],"D:\\ROBERTO\\PROYECTO KD\\react-front\\front\\src\\App.js",["122","123"],"D:\\ROBERTO\\PROYECTO KD\\react-front\\front\\src\\components\\PlanillaMaster.js",["124","125","126","127","128","129","130","131","132","133"],"D:\\ROBERTO\\PROYECTO KD\\react-front\\front\\src\\components\\Planillas.js",["134","135"],"D:\\ROBERTO\\PROYECTO KD\\react-front\\front\\src\\reportWebVitals.js",[],["136","137"],"D:\\ROBERTO\\PROYECTO KD\\react-front\\front\\src\\components\\Modal1.js",["138","139","140","141"],"import { Button, Modal, } from 'react-bootstrap'\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons'\r\nexport default function Moda1() {\r\n    const [smShow, setSmShow] = useState(false);\r\n    const [lgShow, setLgShow] = useState(false);\r\n    return (\r\n        <>\r\n            <Button onClick={() => setSmShow(true)}> <FontAwesomeIcon icon={faTrashAlt}></FontAwesomeIcon></Button>{' '}\r\n            <Modal\r\n                size=\"sm\"\r\n                show={smShow}\r\n                onHide={() => setSmShow(false)}\r\n                aria-labelledby=\"example-modal-sizes-title-sm\"\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"example-modal-sizes-title-sm\">\r\n                        Eliminar\r\n            </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>Estas seguro ?</Modal.Body>\r\n                <Modal.Footer>\r\n                    <button className=\"btn btn-danger\" onClick={() => { this.handleModal() }}>\r\n                        Si\r\n                          </button>\r\n\r\n                    <button className=\"btn btn-succes\" onClick={() => this.peticionPost()} >\r\n                        No\r\n                           </button>\r\n\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n        </>\r\n    );\r\n}","D:\\ROBERTO\\PROYECTO KD\\react-front\\front\\src\\components\\Empleados\\EmpleadosMH.js",["142","143","144","145","146","147","148"],"import React, { Component } from 'react'\r\nimport { Table,  Modal, Container,ModalBody,ModalFooter, Button, Form, Row, Col } from 'react-bootstrap';\r\n//import \"bootstrap/dist/css/bootstrap.min.css\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons'\r\nimport axios from 'axios'\r\nimport moment from \"moment\";\r\n\r\nclass EmpleadosMH extends Component {\r\n    constructor(...props) {\r\n        super(...props);\r\n        this.state = {\r\n            empleadoMH: [], \r\n            show: false,\r\n            showModalEliminar:false ,\r\n            form: {\r\n                idusuario :\"\",\r\n                ocupacion:\"\",\r\n                fecha_ingreso:\"\",\r\n                fecha_salida:\"\", \r\n                tipoModal:\"\"\r\n            }\r\n        }\r\n    }\r\n    cargarDatos() {\r\n        fetch('http://localhost:4201/api/marca-hora',\r\n            {\r\n                method: \"GET\",\r\n                headers: {\r\n                            'Content-Type': 'application/json'\r\n                }\r\n            })\r\n            .then((response) => {\r\n                return response.json()\r\n            })\r\n            .then((res) => {\r\n                this.setState({\r\n                    empleadoMH: res.empleadoMH\r\n                })\r\n            })\r\n            .catch(function (error) {\r\n                console.log('Hubo un problema con la petición:' + error.message);\r\n            });\r\n    }\r\n    componentDidMount() {\r\n        this.cargarDatos();\r\n    }\r\n    handleModal() {\r\n        this.setState({ show: !this.state.show })\r\n    }\r\n\r\n    handleModalEliminar() {\r\n        this.setState({ show: !this.state.showModalEliminar })\r\n    }\r\n    //segundoPlano\r\n    handleChange = async e => {\r\n        e.persist();\r\n        await this.setState({\r\n            form:{\r\n            ...this.state.form,\r\n            [e.target.name]:e.target.value\r\n            }\r\n        })\r\n        console.log(this.state.form)\r\n    }\r\n    peticionPost=async()=>{\r\n        await axios.post('http://localhost:4201/api/empleado-planilla/registrar',this.state.form).then(response=>{\r\n            this.handleModal();\r\n            this.cargarDatos();\r\n        }).catch(error=>   {\r\n            console.log(error.message)\r\n        })\r\n        \r\n    }\r\n    seleccionarEmpleado=(empleado)=>{\r\n        console.log('test',empleado)\r\n        this.setState({\r\n            tipoModal:'actualizar',\r\n            form:{\r\n                idusuario:empleado.idusuario,\r\n                ocupacion:empleado.ocupacion,\r\n                fecha_ingreso:empleado.fecha_ingreso,\r\n                fecha_salida:empleado.fecha_salida  \r\n            }\r\n            \r\n        })\r\n        console.log('test',this.state.form)\r\n    }\r\n    peticionPut=()=>{\r\n        axios.put('')\r\n    }\r\n    peticionDelete=()=>{\r\n            axios.delete('http://localhost:4201/api/empleado-planilla'+this.state.form._id).then(response=>{\r\n                this.setState({modalEliminar:false});\r\n                this.cargarDatos();\r\n            })\r\n    }\r\n    render() {\r\n        const { empleadoMH } = this.state;\r\n        const {form}=this.state\r\n\r\n        return (\r\n            <>\r\n                <Container>\r\n                    <h2>MARCADO DE HORAS</h2>\r\n                    <br />\r\n                    \r\n                    <br /> \r\n                    <br />\r\n                    <Table striped bordered hover variant=\"dark\">\r\n                        <thead>\r\n                            <tr>\r\n                                {/* <th>Nombres</th> */}\r\n                                <th>Apellido Paterno</th>\r\n                                <th>Apellido Materno</th>\r\n                                {/* <th>IDempresa</th> */}\r\n                                <th>Horario entrada (Mañana)</th>\r\n                                <th>Horario salida (Mañana)</th>\r\n                                <th>Horario entrada (TARDE)</th>\r\n                                <th>Horario salida(TARDE)</th>\r\n                                {/* <th>Fecha</th> */}\r\n\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                (empleadoMH)\r\n                                    ?\r\n                                    empleadoMH.map(item => (\r\n\r\n                                        <tr key={item._id}>\r\n                                            {/* <td>{item.idEmpleado.nombres}</td> */}\r\n                                            <td>{item.idEmpleado.apellidoP}</td>\r\n                                            <td>{item.idEmpleado.apellidoM}</td>\r\n                                            {/* <td>{item.idEmpresa}</td> */}\r\n                                            <td>{ (item.marcaH1)\r\n                                                 ?      moment(item.marcaH1).format('LT'):'No registrado'}</td>\r\n                                            <td>{(item.marcaH2)\r\n                                                 ? moment(item.marcaH2).format('LT'):'No registrado'}</td>\r\n                                            <td>{(item.marcaH3)\r\n                                                 ? moment(item.marcaH3).format('LT'):'No registrado'}</td>\r\n                                            <td>{(item.marcaH4)\r\n                                                ? moment(item.marcaH4).format('LT'):'No registrado'}</td>\r\n                                            {/* <td>{ moment(item.fechaRegistro).format('L')}</td> */}\r\n                                            {/* <td>\r\n                                                <button className=\"btn btn-primary\" onClick={()=>this.seleccionarEmpleado(item)} > <FontAwesomeIcon icon={faEdit}></FontAwesomeIcon>   </button>\r\n                                                {\"   \"}\r\n                                            </td> */}\r\n                                        </tr>\r\n                                    ))\r\n                                    :\r\n                                    <tr></tr>}\r\n                        </tbody>\r\n                    </Table>\r\n                    <Modal show={this.state.show} onHide={() => this.handleModal()} >\r\n                        <Modal.Header closeButton> Agregar Empleado\r\n                            {/* <Modal.Title>Modal heading</Modal.Title> */}\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <Form>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Form.Group controlId=\"formBasicEmail\">\r\n                                            <Form.Label>Id Usuario</Form.Label>\r\n                                            <input type=\"text\" placeholder=\"Id Usuario\" name=\"idusuario\" onChange={this.handleChange}value  = {form ?form.idusuario:''} />\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Form.Group controlId=\"formBasictext\">\r\n                                            <Form.Label>Ocupación</Form.Label>\r\n                                            <input type=\"text\" placeholder=\"Ocupacion\"name=\"ocupacion\" onChange={this.handleChange}value  = {form? form.ocupacion:''}/>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Form.Group controlId=\"formBasictext\">\r\n                                            <Form.Label>Fecha Inicio </Form.Label>\r\n                                            <input type=\"date\"name=\"fecha_ingreso\" onChange={this.handleChange}value  = { form ?form.fecha_ingreso:'' }/>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Form.Group controlId=\"formBasictext\">\r\n                                            <Form.Label>Fecha Fin </Form.Label>\r\n                                            <input type=\"date\" name=\"fecha_salida\"onChange={this.handleChange}value  = {form ?form.fecha_salida:''}/>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Form>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <button className=\"btn btn-danger\"  onClick={() => { this.handleModal() }}>\r\n                                Cancelar\r\n                          </button>\r\n                          {this.state.tipoModal=='insertar'?\r\n                            <button className=\"btn btn-succes\"  onClick={()=>this.peticionPost()} >\r\n                                Insertar\r\n                           </button>:\r\n                           <button className=\"btn btn-primary\"  >\r\n                                Actualizar\r\n                             </button>\r\n                           }\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n             \r\n                </Container>\r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default EmpleadosMH","D:\\ROBERTO\\PROYECTO KD\\react-front\\front\\src\\screens\\ProductSreen.js",["149"],"import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Image, ListGroup, Card, Button, CardColumns } from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport products from '../products'\r\n\r\nconst ProductSreen = ({ match }) => {\r\n    const product = products.find((p) => p._id === match.params.id)\r\n    console.log(product)\r\n    return (\r\n        <>\r\n            <Link className='btn btn-dark my-3' to='/planillas'>Atras</Link>\r\n            <Row>\r\n                <Col md={6}>\r\n                    <Image src={product.image} alt={product.name} fluid />\r\n                </Col>\r\n                <Col md={3}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item >\r\n                            <h3>{product.name}</h3>\r\n\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item >\r\n                            <Rating value={product.rating} text={`${product.numReviews} reviews`} />\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item >\r\n                            Descripton:  {product.description}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item >\r\n                            Price:  <h3>{product.price}</h3>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={3}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item >\r\n                                <Row>\r\n                                    <Col>\r\n                                        Price:\r\n                              </Col>\r\n                                    <Col>\r\n                                    <strong>{product.price}</strong>\r\n                                     \r\n                                    </Col>\r\n                                </Row>\r\n\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item >\r\n                           \r\n                                <Row>\r\n                                    <Col>\r\n                                        status:\r\n                              </Col>\r\n                                    <Col>\r\n                                        {product.countInStock > 0 ? 'In Stock' : 'Out Stock'}\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item variant='flush'>\r\n                                <Button className='btn-clock' type='button' disabled={product.countInStock===0}> Add to Cart  </Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductSreen\r\n","D:\\ROBERTO\\PROYECTO KD\\react-front\\front\\src\\products.js",[],"D:\\ROBERTO\\PROYECTO KD\\react-front\\front\\src\\components\\test.js",["150","151","152"],"import React, { Component } from 'react'\r\nimport { Table, Card } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n\r\n//import products from '../planilla/products'\r\nclass Planillas extends Component {\r\n    constructor(...props) {\r\n        super(...props);\r\n        this.state = {\r\n            planillaP: [],\r\n        }\r\n    }\r\n  \r\n    cargarDatos() {\r\n        fetch('http://localhost:4201/api/empresa-calendario/600899bbec174a336873c45e',\r\n            {\r\n                method: \"GET\",\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            })\r\n            .then((response) => {\r\n                return response.json()\r\n            })\r\n            .then((res) => {\r\n                console.log('result', res)\r\n                this.setState({\r\n                    planillaP: res.data.detalles\r\n                })\r\n            })\r\n            .catch(function (error) {\r\n                console.log('Hubo un problema con la petición:' + error.message);\r\n            });\r\n\r\n    }\r\n    componentDidMount() {\r\n        this.cargarDatos();\r\n    }\r\n    render() {\r\n        const { planillaP } = this.state;\r\n        // console.log('testing', planillaP)\r\n        return (\r\n            <>\r\n                <h3>Lista de Horarios mensuales</h3>\r\n                <br />       <br />       <br />\r\n                <Table striped bordered hover variant=\"dark\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Dia</th>\r\n                            <th>Horario mañana</th>\r\n                            <th>Horario mañana</th>\r\n                            <th>Horario tarde</th>\r\n                            <th>Horario tarde</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            (planillaP)\r\n                                ?\r\n                                planillaP.map(item => (\r\n                                    <tr key={item._id}>\r\n                                     <td>{item.dia}</td>\r\n                                        <td>{item.idTipoHorario.horario1H}:{item.idTipoHorario.horario1M}</td> \r\n                                    \r\n                                        <td>{item.idTipoHorario.horario2H}:{item.idTipoHorario.horario2M}</td> \r\n                                 \r\n                                        <td>{item.idTipoHorario.horario3H}:{item.idTipoHorario.horario3M}</td> \r\n                                    \r\n                                        <td>{item.idTipoHorario.horario4H}:{item.idTipoHorario.horario4M}</td> \r\n                                                                        \r\n                                    </tr>\r\n\r\n                                ))\r\n                                :\r\n                                <tr></tr>}\r\n                    </tbody>\r\n                </Table>\r\n             \r\n     \r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default Planillas","D:\\ROBERTO\\PROYECTO KD\\react-front\\front\\src\\components\\Calendario\\IndexCalendario.js",[],"D:\\ROBERTO\\PROYECTO KD\\react-front\\front\\src\\screens\\HomeScreen.js",["153","154","155"],"import React, { useState, useEffect } from 'react'\r\nimport { Row, Col, Table } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\n//import Product from '../components/Product'\r\nimport products from '../products'\r\nimport Rating from '../components/Rating'\r\nimport axios from 'axios'\r\n\r\nconst HomeScreen = () => {\r\n    const [products, setProducts] = useState([])\r\n    useEffect(() => {\r\n        const fetchProducts = async () => {\r\n            const { data } = await axios.get('https://reqres.in/api/users')\r\n            //const result = JSON.stringify({ data });\r\n            console.log('test :', data)\r\n            setProducts(data)\r\n        }\r\n        fetchProducts()\r\n    }, [])\r\n\r\n   \r\n    return (\r\n        <>\r\n            <Table striped bordered hover>\r\n                <thead>\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th>First Name</th>\r\n                        <th>Last Name</th>\r\n                        <th>Username</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {/* <Product product={product}/> */}\r\n                    {products.map((product) => (\r\n                        <tr key={product._id}>\r\n                            <td>\r\n                                <Link to={`/planillas/${product._id}`} >  {product.name}</Link>\r\n\r\n                            </td>\r\n                            <td>\r\n                                {product.brand}\r\n                            </td>\r\n                            <td>\r\n                                <Rating\r\n                                    value={product.rating}\r\n                                    text={`${product.numReviews} reviews`} />\r\n                            </td>\r\n                            <td>\r\n                                {product.test.nombre}\r\n\r\n                            </td>\r\n\r\n                        </tr>))}\r\n\r\n\r\n\r\n                    {/* <h1>Latest Prodcuts</h1>\r\n                <Row> \r\n                    {products.map((product)=>(\r\n                        <Col sm={12} md={6} lg={4} xl={3}>\r\n                                    <h2>{product.name}</h2>\r\n                            <Product product={product}/>\r\n                        </Col>\r\n                    ))}\r\n                    \r\n                </Row> */}\r\n                    {/* <tr>\r\n                    <td>{product.name}</td>\r\n                    <td>{product.brand}</td>\r\n                    <td>{product.price}</td>\r\n                    <td>{product.category}</td>\r\n                </tr>\r\n             */}\r\n                </tbody>\r\n            </Table>\r\n\r\n            {/* <h1>Latest Prodcuts</h1>\r\n                <Row> \r\n                    {products.map((product)=>(\r\n                        <Col sm={12} md={6} lg={4} xl={3}>\r\n                                    <h2>{product.name}</h2>\r\n                            <Product product={product}/>\r\n                        </Col>\r\n                    ))}\r\n                    \r\n                </Row> */}\r\n\r\n        </>\r\n    )\r\n}\r\nexport default HomeScreen","D:\\ROBERTO\\PROYECTO KD\\react-front\\front\\src\\components\\excel.js",[],{"ruleId":"156","severity":1,"message":"157","line":6,"column":8,"nodeType":"158","messageId":"159","endLine":6,"endColumn":17},{"ruleId":"156","severity":1,"message":"157","line":6,"column":8,"nodeType":"158","messageId":"159","endLine":6,"endColumn":17},{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","replacedBy":"163"},{"ruleId":"156","severity":1,"message":"164","line":2,"column":10,"nodeType":"158","messageId":"159","endLine":2,"endColumn":19},{"ruleId":"156","severity":1,"message":"165","line":2,"column":21,"nodeType":"158","messageId":"159","endLine":2,"endColumn":26},{"ruleId":"156","severity":1,"message":"166","line":2,"column":28,"nodeType":"158","messageId":"159","endLine":2,"endColumn":37},{"ruleId":"156","severity":1,"message":"167","line":2,"column":39,"nodeType":"158","messageId":"159","endLine":2,"endColumn":45},{"ruleId":"160","replacedBy":"168"},{"ruleId":"162","replacedBy":"169"},{"ruleId":"156","severity":1,"message":"164","line":2,"column":24,"nodeType":"158","messageId":"159","endLine":2,"endColumn":33},{"ruleId":"156","severity":1,"message":"170","line":2,"column":35,"nodeType":"158","messageId":"159","endLine":2,"endColumn":44},{"ruleId":"156","severity":1,"message":"171","line":2,"column":46,"nodeType":"158","messageId":"159","endLine":2,"endColumn":57},{"ruleId":"156","severity":1,"message":"167","line":2,"column":59,"nodeType":"158","messageId":"159","endLine":2,"endColumn":65},{"ruleId":"156","severity":1,"message":"172","line":5,"column":18,"nodeType":"158","messageId":"159","endLine":5,"endColumn":28},{"ruleId":"173","severity":1,"message":"174","line":272,"column":47,"nodeType":"175","messageId":"176","endLine":272,"endColumn":49},{"ruleId":"156","severity":1,"message":"177","line":12,"column":8,"nodeType":"158","messageId":"159","endLine":12,"endColumn":12},{"ruleId":"156","severity":1,"message":"178","line":14,"column":8,"nodeType":"158","messageId":"159","endLine":14,"endColumn":18},{"ruleId":"156","severity":1,"message":"170","line":2,"column":35,"nodeType":"158","messageId":"159","endLine":2,"endColumn":44},{"ruleId":"156","severity":1,"message":"171","line":2,"column":46,"nodeType":"158","messageId":"159","endLine":2,"endColumn":57},{"ruleId":"156","severity":1,"message":"167","line":2,"column":59,"nodeType":"158","messageId":"159","endLine":2,"endColumn":65},{"ruleId":"156","severity":1,"message":"179","line":3,"column":10,"nodeType":"158","messageId":"159","endLine":3,"endColumn":23},{"ruleId":"156","severity":1,"message":"180","line":3,"column":25,"nodeType":"158","messageId":"159","endLine":3,"endColumn":30},{"ruleId":"156","severity":1,"message":"181","line":7,"column":10,"nodeType":"158","messageId":"159","endLine":7,"endColumn":25},{"ruleId":"156","severity":1,"message":"182","line":8,"column":10,"nodeType":"158","messageId":"159","endLine":8,"endColumn":16},{"ruleId":"156","severity":1,"message":"172","line":8,"column":18,"nodeType":"158","messageId":"159","endLine":8,"endColumn":28},{"ruleId":"156","severity":1,"message":"183","line":10,"column":8,"nodeType":"158","messageId":"159","endLine":10,"endColumn":14},{"ruleId":"173","severity":1,"message":"174","line":326,"column":51,"nodeType":"175","messageId":"176","endLine":326,"endColumn":53},{"ruleId":"156","severity":1,"message":"164","line":2,"column":23,"nodeType":"158","messageId":"159","endLine":2,"endColumn":32},{"ruleId":"156","severity":1,"message":"172","line":8,"column":18,"nodeType":"158","messageId":"159","endLine":8,"endColumn":28},{"ruleId":"160","replacedBy":"184"},{"ruleId":"162","replacedBy":"185"},{"ruleId":"156","severity":1,"message":"186","line":2,"column":17,"nodeType":"158","messageId":"159","endLine":2,"endColumn":26},{"ruleId":"156","severity":1,"message":"182","line":4,"column":10,"nodeType":"158","messageId":"159","endLine":4,"endColumn":16},{"ruleId":"156","severity":1,"message":"187","line":7,"column":12,"nodeType":"158","messageId":"159","endLine":7,"endColumn":18},{"ruleId":"156","severity":1,"message":"188","line":7,"column":20,"nodeType":"158","messageId":"159","endLine":7,"endColumn":29},{"ruleId":"156","severity":1,"message":"170","line":2,"column":35,"nodeType":"158","messageId":"159","endLine":2,"endColumn":44},{"ruleId":"156","severity":1,"message":"171","line":2,"column":45,"nodeType":"158","messageId":"159","endLine":2,"endColumn":56},{"ruleId":"156","severity":1,"message":"167","line":2,"column":58,"nodeType":"158","messageId":"159","endLine":2,"endColumn":64},{"ruleId":"156","severity":1,"message":"181","line":4,"column":10,"nodeType":"158","messageId":"159","endLine":4,"endColumn":25},{"ruleId":"156","severity":1,"message":"182","line":5,"column":10,"nodeType":"158","messageId":"159","endLine":5,"endColumn":16},{"ruleId":"156","severity":1,"message":"172","line":5,"column":18,"nodeType":"158","messageId":"159","endLine":5,"endColumn":28},{"ruleId":"173","severity":1,"message":"174","line":195,"column":48,"nodeType":"175","messageId":"176","endLine":195,"endColumn":50},{"ruleId":"156","severity":1,"message":"189","line":3,"column":52,"nodeType":"158","messageId":"159","endLine":3,"endColumn":63},{"ruleId":"156","severity":1,"message":"190","line":2,"column":17,"nodeType":"158","messageId":"159","endLine":2,"endColumn":21},{"ruleId":"156","severity":1,"message":"191","line":3,"column":8,"nodeType":"158","messageId":"159","endLine":3,"endColumn":13},{"ruleId":"156","severity":1,"message":"192","line":4,"column":8,"nodeType":"158","messageId":"159","endLine":4,"endColumn":13},{"ruleId":"156","severity":1,"message":"193","line":2,"column":10,"nodeType":"158","messageId":"159","endLine":2,"endColumn":13},{"ruleId":"156","severity":1,"message":"194","line":2,"column":15,"nodeType":"158","messageId":"159","endLine":2,"endColumn":18},{"ruleId":"156","severity":1,"message":"195","line":5,"column":8,"nodeType":"158","messageId":"159","endLine":5,"endColumn":16},"no-unused-vars","'bootstrap' is defined but never used.","Identifier","unusedVar","no-native-reassign",["196"],"no-negated-in-lhs",["197"],"'Container' is defined but never used.","'Table' is defined but never used.","'Jumbotron' is defined but never used.","'Button' is defined but never used.",["196"],["197"],"'ModalBody' is defined but never used.","'ModalFooter' is defined but never used.","'faTrashAlt' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Test' is defined but never used.","'HomeScreen' is defined but never used.","'BrowserRouter' is defined but never used.","'Route' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'faEdit' is defined but never used.","'Modal1' is defined but never used.",["196"],["197"],"'useEffect' is defined but never used.","'lgShow' is assigned a value but never used.","'setLgShow' is assigned a value but never used.","'CardColumns' is defined but never used.","'Card' is defined but never used.","'axios' is defined but never used.","'jsPDF' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'products' is defined but never used.","no-global-assign","no-unsafe-negation"]