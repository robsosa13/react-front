[{"D:\\Roberto\\PROYECTO KD\\react-front\\front\\src\\index.js":"1","D:\\Roberto\\PROYECTO KD\\react-front\\front\\src\\components\\Footer.js":"2","D:\\Roberto\\PROYECTO KD\\react-front\\front\\src\\components\\Header.js":"3","D:\\Roberto\\PROYECTO KD\\react-front\\front\\src\\products.js":"4","D:\\ROBERTO\\PROYECTO KD\\react-front\\front\\src\\index.js":"5","D:\\ROBERTO\\PROYECTO KD\\react-front\\front\\src\\components\\MarcaHora.js":"6","D:\\ROBERTO\\PROYECTO KD\\react-front\\front\\src\\components\\Footer.js":"7","D:\\ROBERTO\\PROYECTO KD\\react-front\\front\\src\\components\\Index.js":"8","D:\\ROBERTO\\PROYECTO KD\\react-front\\front\\src\\components\\EmpleadoPlanilla.js":"9","D:\\ROBERTO\\PROYECTO KD\\react-front\\front\\src\\components\\Header.js":"10","D:\\ROBERTO\\PROYECTO KD\\react-front\\front\\src\\components\\Rating.js":"11","D:\\ROBERTO\\PROYECTO KD\\react-front\\front\\src\\App.js":"12","D:\\ROBERTO\\PROYECTO KD\\react-front\\front\\src\\components\\PlanillaMaster.js":"13","D:\\ROBERTO\\PROYECTO KD\\react-front\\front\\src\\components\\Planillas.js":"14","D:\\ROBERTO\\PROYECTO KD\\react-front\\front\\src\\reportWebVitals.js":"15","D:\\ROBERTO\\PROYECTO KD\\react-front\\front\\src\\components\\Modal1.js":"16","D:\\ROBERTO\\PROYECTO KD\\react-front\\front\\src\\components\\Empleados\\EmpleadosMH.js":"17","D:\\ROBERTO\\PROYECTO KD\\react-front\\front\\src\\screens\\ProductSreen.js":"18","D:\\ROBERTO\\PROYECTO KD\\react-front\\front\\src\\products.js":"19","D:\\ROBERTO\\PROYECTO KD\\react-front\\front\\src\\components\\test.js":"20","D:\\ROBERTO\\PROYECTO KD\\react-front\\front\\src\\components\\Calendario\\IndexCalendario.js":"21","D:\\ROBERTO\\PROYECTO KD\\react-front\\front\\src\\screens\\HomeScreen.js":"22","D:\\ROBERTO\\PROYECTO KD\\react-front\\front\\src\\components\\excel.js":"23"},{"size":544,"mtime":1610655059955,"results":"24","hashOfConfig":"25"},{"size":444,"mtime":1610574087339,"results":"26","hashOfConfig":"25"},{"size":1683,"mtime":1610992402719,"results":"27","hashOfConfig":"25"},{"size":2976,"mtime":1610727484789,"results":"28","hashOfConfig":"25"},{"size":590,"mtime":1611078180717,"results":"29","hashOfConfig":"30"},{"size":508,"mtime":1611091069535,"results":"31","hashOfConfig":"30"},{"size":444,"mtime":1610574087339,"results":"32","hashOfConfig":"30"},{"size":1203,"mtime":1610992902815,"results":"33","hashOfConfig":"30"},{"size":14392,"mtime":1611866871465,"results":"34","hashOfConfig":"30"},{"size":1954,"mtime":1611148062315,"results":"35","hashOfConfig":"30"},{"size":2333,"mtime":1610717220172,"results":"36","hashOfConfig":"30"},{"size":1565,"mtime":1612015155906,"results":"37","hashOfConfig":"30"},{"size":17593,"mtime":1612022437486,"results":"38","hashOfConfig":"30"},{"size":20347,"mtime":1611947242069,"results":"39","hashOfConfig":"30"},{"size":362,"mtime":1609361779397,"results":"40","hashOfConfig":"30"},{"size":1431,"mtime":1611089136095,"results":"41","hashOfConfig":"30"},{"size":9401,"mtime":1611945322047,"results":"42","hashOfConfig":"30"},{"size":2927,"mtime":1612015177013,"results":"43","hashOfConfig":"30"},{"size":2976,"mtime":1610727484789,"results":"44","hashOfConfig":"30"},{"size":3080,"mtime":1611179163206,"results":"45","hashOfConfig":"30"},{"size":3130,"mtime":1611689681497,"results":"46","hashOfConfig":"30"},{"size":3096,"mtime":1610748379222,"results":"47","hashOfConfig":"30"},{"size":2908,"mtime":1611861080065,"results":"48","hashOfConfig":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"9ojaxw",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"60"},"b5f4u8",{"filePath":"61","messages":"62","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"60"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"60"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"60"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"60"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"D:\\Roberto\\PROYECTO KD\\react-front\\front\\src\\index.js",["105"],"D:\\Roberto\\PROYECTO KD\\react-front\\front\\src\\components\\Footer.js",[],"D:\\Roberto\\PROYECTO KD\\react-front\\front\\src\\components\\Header.js",[],"D:\\Roberto\\PROYECTO KD\\react-front\\front\\src\\products.js",[],"D:\\ROBERTO\\PROYECTO KD\\react-front\\front\\src\\index.js",["106"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport bootstrap from './bootstrap.min.css'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["107","108"],"D:\\ROBERTO\\PROYECTO KD\\react-front\\front\\src\\components\\MarcaHora.js",["109","110","111","112"],"import React, { Component } from 'react'\r\nimport { Container, Table, Jumbotron, Button } from 'react-bootstrap';\r\n\r\n//import products from '../planilla/products'\r\nclass MarcaHora extends Component {\r\n    constructor(...props) {\r\n        super(...props);\r\n        this.state = {\r\n        }\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <>\r\n                <h1>test</h1>\r\n               {/* <CalendarioForm></CalendarioForm> */}\r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default MarcaHora\r\n    ",["113","114"],"D:\\ROBERTO\\PROYECTO KD\\react-front\\front\\src\\components\\Footer.js",[],"D:\\ROBERTO\\PROYECTO KD\\react-front\\front\\src\\components\\Index.js",[],"D:\\ROBERTO\\PROYECTO KD\\react-front\\front\\src\\components\\EmpleadoPlanilla.js",["115","116","117","118","119","120"],"import React, { Component } from 'react'\r\nimport { Table, Modal, Container, ModalBody, ModalFooter, Button, Form, Row, Col } from 'react-bootstrap';\r\n//import \"bootstrap/dist/css/bootstrap.min.css\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons'\r\nimport axios from 'axios'\r\nimport Modal1 from './Modal1'\r\nclass EmpleadoPlanilla extends Component {\r\n    constructor(...props) {\r\n        super(...props);\r\n        this.state = {\r\n            empleadoP: [],\r\n            show: false,\r\n            showModalEliminar: false,\r\n            form: {\r\n                idusuario: \"\",\r\n                nombres: \"\",\r\n                apellidoP: \"\",\r\n                apellidoM: \"\",\r\n                CI: \"\",\r\n                exp: \"\",\r\n                fecha_nacimiento: \"\",\r\n                sexo: \"\",\r\n                ocupacion: \"\",\r\n                fecha_ingreso: \"\",\r\n                fecha_salida: \"\",\r\n                haber_basico: \"\",\r\n                tipoModal: \"\"\r\n            }\r\n        }\r\n    }\r\n    cargarDatos() {\r\n        fetch('http://localhost:4201/api/empleado-planilla',\r\n            {\r\n                method: \"GET\",\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            })\r\n            .then((response) => {\r\n                return response.json()\r\n            })\r\n            .then((res) => {\r\n                this.setState({\r\n                    empleadoP: res.empleadoP\r\n                })\r\n            })\r\n            .catch(function (error) {\r\n                console.log('Hubo un problema con la petición:' + error.message);\r\n            });\r\n    }\r\n    componentDidMount() {\r\n        this.cargarDatos();\r\n    }\r\n    handleModal() {\r\n        this.setState({ show: !this.state.show })\r\n    }\r\n\r\n    handleModalEliminar() {\r\n        this.setState({ show: !this.state.showModalEliminar })\r\n    }\r\n    //segundoPlano\r\n    handleChange = async e => {\r\n        e.persist();\r\n        await this.setState({\r\n            form: {\r\n                ...this.state.form,\r\n                [e.target.name]: e.target.value\r\n            }\r\n        })\r\n        console.log(this.state.form)\r\n    }\r\n    peticionPost = async () => {\r\n        await axios.post('http://localhost:4201/api/empleado-planilla/registrar', this.state.form).then(response => {\r\n            this.handleModal();\r\n            this.cargarDatos();\r\n        }).catch(error => {\r\n            console.log(error.message)\r\n        })\r\n    }\r\n    seleccionarEmpleado = (empleado) => {\r\n        console.log('test', empleado)\r\n        this.setState({\r\n            tipoModal: 'actualizar',\r\n            form: {\r\n                idusuario: empleado.idusuario,\r\n                nombres: empleado.nombres,\r\n                apellidoP: empleado.apellidoP,\r\n                apellidoM: empleado.apellidoM,\r\n                CI: empleado.CI,\r\n                exp: empleado.exp,\r\n                fecha_nacimiento: empleado.fecha_nacimiento,\r\n                sexo: empleado.sexo,\r\n                ocupacion: empleado.ocupacion,\r\n                fecha_ingreso: empleado.fecha_ingreso,\r\n                fecha_salida: empleado.fecha_salida,\r\n                haber_basico: empleado.haber_basico\r\n            }\r\n        })\r\n        console.log('test', this.state.form)\r\n    }\r\n    peticionPut = () => {\r\n        axios.put('')\r\n    }\r\n    peticionDelete = () => {\r\n        axios.delete('http://localhost:4201/api/empleado-planilla' + this.state.form._id).then(response => {\r\n            this.setState({ modalEliminar: false });\r\n            this.cargarDatos();\r\n        })\r\n    }\r\n    render() {\r\n        const { empleadoP } = this.state;\r\n        const { form } = this.state\r\n\r\n        return (\r\n            <>\r\n\r\n                <h2>Lista de Empleados</h2>\r\n                <br />\r\n                <button className=\"btn btn-success\" onClick={() => { this.setState({ form: null, tipoModal: 'insertar' }); this.handleModal() }} >Agregar Empleado </button>\r\n                <br />\r\n                <br />\r\n                <Table striped bordered hover>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Nombre</th>\r\n                            <th>Apellido Paterno</th>\r\n                            <th>Apellido Materno</th>\r\n                            <th>C I   </th>\r\n                            <th>Exp</th>\r\n                            <th>Fecha de Nacimiento</th>\r\n                            <th>Sexo</th>\r\n                            <th>Ocupacion</th>\r\n                            <th>Fecha Ingreso Empresa</th>\r\n                            <th>Fecha Salida Empresa</th>\r\n                            <th>Haber Básico</th>\r\n                            <th>Opciones</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            (empleadoP)\r\n                                ?\r\n                                empleadoP.map(item => (\r\n\r\n                                    <tr key={item._id}>\r\n                                        {/* <td>{item.idusuario}</td> */}\r\n                                        <td>{item.nombres}</td>\r\n                                        <td>{item.apellidoP}</td>\r\n                                        <td>{item.apellidoM}</td>\r\n                                        <td>{item.CI}</td>\r\n                                        <td>{item.exp}</td>\r\n                                        <td>{item.fecha_nacimiento}</td>\r\n                                        <td>{item.sexo}</td>\r\n                                        <td>{item.ocupacion}</td>\r\n                                        <td>{item.fecha_ingreso}</td>\r\n                                        <td>{item.fecha_salida}</td>\r\n                                        <td>{item.haber_basico}</td>\r\n                                        <td>\r\n                                            <button className=\"btn btn-primary\" onClick={() => this.seleccionarEmpleado(item)} > <FontAwesomeIcon icon={faEdit}></FontAwesomeIcon>   </button>\r\n                                            {\"   \"}\r\n                                            <Modal1 />\r\n                                            {/* <button className=\"btn btn-danger\" onClick={()=>{this.handleModalEliminar()}}> <FontAwesomeIcon icon={faTrashAlt}></FontAwesomeIcon>   </button> */}\r\n\r\n                                            {/* <button className=\"btn btn-success\" onClick={() => { this.setState({form:null,tipoModal:'insertar'}); this.handleModal() }} >Agregar Empleado </button> */}\r\n\r\n\r\n                                        </td>\r\n                                    </tr>\r\n                                ))\r\n                                :\r\n                                <tr></tr>}\r\n                    </tbody>\r\n                \r\n                </Table>\r\n                <Modal show={this.state.show} onHide={() => this.handleModal()} >\r\n                    <Modal.Header closeButton> Agregar Empleado\r\n                            {/* <Modal.Title>Modal heading</Modal.Title> */}\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Form>\r\n                            <Row>\r\n                                \r\n                                <Col>\r\n                                    <Form.Group controlId=\"formBasicEmail\">\r\n                                        <Form.Label>Nombres</Form.Label>\r\n                                        <input type=\"text\" placeholder=\"nombres\" name=\"nombres\" onChange={this.handleChange} value={form ? form.nombres : ''} />\r\n                                    </Form.Group>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Form.Group controlId=\"formBasictext\">\r\n                                        <Form.Label>Apellido Paterno</Form.Label>\r\n                                        <input type=\"text\" placeholder=\"Apellido Paterno\" name=\"apellidoP\" onChange={this.handleChange} value={form ? form.apellidoP : ''} />\r\n                                    </Form.Group>\r\n                                </Col>\r\n                            </Row>\r\n                            {/* AQUI */}\r\n                            <Row>\r\n                                <Col>\r\n                                    <Form.Group controlId=\"formBasicEmail\">\r\n                                        <Form.Label>Apellido Materno</Form.Label>\r\n                                        <input type=\"text\" placeholder=\"Id Usuario\" name=\"apellidoM\" onChange={this.handleChange} value={form ? form.apellidoM : ''} />\r\n                                    </Form.Group>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Form.Group controlId=\"formBasictext\">\r\n                                        <Form.Label> C I</Form.Label><br></br>\r\n                                        <input type=\"text\" placeholder=\"Ocupacion\" name=\"CI\" onChange={this.handleChange} value={form ? form.CI : ''} />\r\n                                    </Form.Group>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col>\r\n                                    <Form.Group controlId=\"formBasicEmail\">\r\n                                        <Form.Label>Expedido</Form.Label>\r\n                                        <input type=\"text\" placeholder=\"eXP\" name=\"exp\" onChange={this.handleChange} value={form ? form.exp : ''} />\r\n                                    </Form.Group>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Form.Group controlId=\"formBasicEmail\">\r\n                                        <Form.Label>Fecha de Nacimiento</Form.Label>\r\n                                        <input type=\"date\" placeholder=\"Id Usuario\" name=\"fecha_nacimiento\" onChange={this.handleChange} value={form ? form.fecha_nacimiento : ''} />\r\n                                    </Form.Group>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col>\r\n                                    <Form.Group controlId=\"formBasicEmail\">\r\n                                        <Form.Label>Sexo</Form.Label>\r\n                                        <input type=\"text\" placeholder=\"Sexo\" name=\"sexo\" onChange={this.handleChange} value={form ? form.sexo : ''} />\r\n                                    </Form.Group>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Form.Group controlId=\"formBasictext\">\r\n                                        <Form.Label>Ocupación</Form.Label>\r\n                                        <input type=\"text\" placeholder=\"Ocupacion\" name=\"ocupacion\" onChange={this.handleChange} value={form ? form.ocupacion : ''} />\r\n                                    </Form.Group>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col>\r\n                                    <Form.Group controlId=\"formBasictext\">\r\n                                        <Form.Label>Fecha Ingreso a la empresa </Form.Label>\r\n                                        <input type=\"date\"  name=\"fecha_ingreso\" onChange={this.handleChange} value={form ? form.fecha_ingreso : ''} />\r\n                                    </Form.Group>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Form.Group controlId=\"formBasictext\">\r\n                                        <Form.Label>Fecha Fin </Form.Label>\r\n                                        <input type=\"date\" name=\"fecha_salida\" onChange={this.handleChange} value={form ? form.fecha_salida : ''} />\r\n                                    </Form.Group>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col>\r\n                                    <Form.Group controlId=\"formBasicEmail\">\r\n                                        <Form.Label>Haber Básico</Form.Label>\r\n                                        <input type=\"text\" placeholder=\"Haber Basico\" name=\"haber_basico\" onChange={this.handleChange} value={form ? form.haber_basico : ''} />\r\n                                    </Form.Group>\r\n                                </Col>\r\n                                <Col>\r\n\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <button className=\"btn btn-danger\" onClick={() => { this.handleModal() }}>\r\n                            Cancelar\r\n                          </button>\r\n                        {this.state.tipoModal == 'insertar' ?\r\n                            <button className=\"btn btn-success\" onClick={() => this.peticionPost()} >\r\n                                Agregar\r\n                           </button> :\r\n                            <button className=\"btn btn-success\" >\r\n                                Actualizar\r\n                             </button>\r\n                        }\r\n                    </Modal.Footer>\r\n                </Modal>\r\n\r\n                {/* <Modal  show={this.state.showModalEliminar}  onHide={() => this.handleModal()} >\r\n                        <Modal.Header closeButton> Agregar Empleado\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n\r\n                            Are you sure ?\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <button className=\"btn btn-succes\"   >\r\n                                Si\r\n                           </button>\r\n                           <button className=\"btn btn-primary\"  >\r\n                                No\r\n                             </button>\r\n                        </Modal.Footer>\r\n                    </Modal> */}\r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default EmpleadoPlanilla","D:\\ROBERTO\\PROYECTO KD\\react-front\\front\\src\\components\\Header.js",[],"D:\\ROBERTO\\PROYECTO KD\\react-front\\front\\src\\components\\Rating.js",[],"D:\\ROBERTO\\PROYECTO KD\\react-front\\front\\src\\App.js",["121","122"],"D:\\ROBERTO\\PROYECTO KD\\react-front\\front\\src\\components\\PlanillaMaster.js",["123","124","125","126","127","128","129","130","131","132"],"D:\\ROBERTO\\PROYECTO KD\\react-front\\front\\src\\components\\Planillas.js",["133","134"],"import React, { Component } from 'react'\r\nimport { Table, Card, Container ,Form,Modal,Row,Col} from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport moment from \"moment\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons'\r\nimport ReactExport from \"react-export-excel\";\r\n\r\nconst ExcelFile = ReactExport.ExcelFile;\r\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\r\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\r\nclass Planillas extends Component {\r\n    constructor(...props) {\r\n        super(...props);\r\n        this.state = {\r\n            planillaP: [],\r\n            boletaE:[],\r\n            show: false,\r\n      \r\n            form: {\r\n                id:\"\",\r\n                dias_pagados: \"\",\r\n                horas_extras: \"\",\r\n                bono_produccion: \"\",\r\n                otros_bonos: \"\",\r\n                rc_iva: \"\",\r\n                anticipos: \"\",\r\n                otros_descuentos: \"\",\r\n            }\r\n        }\r\n    }\r\n    handleModal() {\r\n      //  console.log('test')\r\n        this.setState({ show: !this.state.show })\r\n    }\r\n    handleChange = async e => {\r\n        e.persist();\r\n        await this.setState({\r\n            form: {\r\n                ...this.state.form,\r\n                [e.target.name]: e.target.value\r\n            }\r\n        })\r\n        console.log(this.state.form)\r\n    }\r\n    seleccionar=(planillaEmpleado)=>{\r\n\r\n        this.setState({\r\n            form :{ \r\n                id:planillaEmpleado._id,\r\n                dias_pagados:planillaEmpleado.dias_pagados,\r\n                horas_extras:planillaEmpleado.horas_extras,\r\n                bono_produccion:planillaEmpleado.bono_produccion,\r\n                otros_bonos:planillaEmpleado.otros_bonos,\r\n                rc_iva:planillaEmpleado.rc_iva,\r\n                anticipos:planillaEmpleado.anticipos,\r\n                otros_descuentos:planillaEmpleado.otros_descuentos,\r\n            }\r\n        })\r\n   \r\n    }\r\n    test(){\r\n        alert('test')\r\n    }\r\n    cargarEmpleado(){\r\n        fetch('http://localhost:4201/api/planillas',\r\n        {\r\n            method: \"GET\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        .then((response) => {\r\n            return response.json()\r\n        })\r\n        .then((res) => {\r\n            console.log('result', res)\r\n            this.setState({\r\n                planillaP: res.planillas\r\n            })\r\n        })\r\n        .catch(function (error) {\r\n            console.log('Hubo un problema con la petición:' + error.message);\r\n        });\r\n        \r\n    }\r\n    printBoletaEmpleado(){\r\n\r\n        const unit = \"pt\";\r\n        const size = \"A2\";\r\n        const orientation = \"landscape\"; \r\n        const marginLeft = 40;\r\n        const doc = new jsPDF(orientation, unit, size);\r\n        doc.setFontSize(15);\r\n        const title = \"Boleta de pago \";\r\n        const headers = [[ \"NIT Empresa\",\"Apellido Paterno\",\"Apellido Materno\",\"Nombre\",\"CI\",\"Exp\",\"Cargo\"\r\n        ,\"Sueldo Básico\",\"Dias Trabajados\",\"F-Ingreso\",\"Mes boleta\",\"Salario Ganado\",\"Bono de Antiguedad\",\"Horas extras\"\r\n        ,\"Otros Ing\",\"AFP\",\"Aporte Nal.\",\"RC IVA\",\"Anticipos otros desc\",\"Total Ingresos\",\"Total Egresos\",\"Liquido Pagable\"]];\r\n        const data = this.state.boletaE.map(elt => [\r\n            elt.idPlanillaMayor.nit,\r\n            elt.idEmpleadoPlanilla.apellidoP,\r\n            elt.idEmpleadoPlanilla.apellidoM,\r\n            elt.idEmpleadoPlanilla.nombres,\r\n            elt.idEmpleadoPlanilla.CI,\r\n            elt.idEmpleadoPlanilla.exp,\r\n            elt.idEmpleadoPlanilla.ocupacion,\r\n            elt.haber_basico,\r\n            elt.dias_pagados,\r\n            elt.idEmpleadoPlanilla.fecha_ingreso,\r\n            elt.idPlanillaMayor.periodo_planilla,\r\n            elt.haber_basico,\r\n            elt.bono_antiguedad,\r\n            elt.importe_horas_extras,\r\n            elt.otros_bonos,\r\n            elt.monto_afp,\r\n            elt.aporte_nal_solidario,\r\n            elt.rc_iva,\r\n            elt.otros_descuentos,'','',\r\n            elt.liquido_pagable,\r\n           ]);\r\n        let content = {\r\n            startY: 200,\r\n            head: headers,\r\n            body: data\r\n        };\r\n        doc.text(title, marginLeft, 40);\r\n        doc.autoTable(content);\r\n        doc.save(\"Planilla.pdf\")\r\n\r\n    }\r\n    printBoleta = (item) => {\r\n        console.log(item)\r\n        fetch('http://localhost:4201/api/planilla/'+item,\r\n        {\r\n            method: \"GET\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        .then((response) => {\r\n            return response.json()\r\n        })\r\n        .then((res) => {\r\n            console.log('PLANILLA !!!', res)\r\n            this.setState({\r\n                boletaE: res.planillas\r\n            })\r\n            console.log('Test')\r\n            this.printBoletaEmpleado()\r\n           \r\n        })\r\n        .catch(function (error) {\r\n            console.log('Hubo un problema con la petición:' + error.message);\r\n        });\r\n\r\n        //this.setState({ isEdit: true, id: item.id });\r\n      };\r\n    exportPDF = () => {\r\n\r\n        const unit = \"pt\";\r\n        const size = \"A2\"; // Use A1, A2, A3 or A4\r\n        const orientation = \"landscape\"; // portrait or landscape\r\n        const marginLeft = 40;\r\n        const doc = new jsPDF(orientation, unit, size);\r\n        doc.setFontSize(15);\r\n        const title = \"Planilla de sueldos\";\r\n        const headers = [[ \"Nombres\",\"Apellido Paterno\",\"Apellido Materno\",\"CI\",\"exp\",\"Fecha de Nacimiento\",\"Sexo\",\"Ocupacion\", \"Fecha Ingreso\", \"Días pagados\", \"Haber Básico\", \"Total días pagados\",\r\n            \"Bono de Antiguedad\", \"Horas extras\", \"Importe Horas Extras\", \"Bono Produccion\", \"Otros Bonos\", \"Total Ganado\", \"AFP\",\r\n            \"Aporte Nacional Solidario\", \"RC IVA\", \"Anticipos\", \"Otros Descuentos\", \"Total Descuentos\", \"Liquido pagble\"]];\r\n        const data = this.state.planillaP.map(elt => [\r\n            elt.idEmpleadoPlanilla.nombres,\r\n            elt.idEmpleadoPlanilla.apellidoP,\r\n            elt.idEmpleadoPlanilla.apellidoM,\r\n            elt.idEmpleadoPlanilla.CI,\r\n            elt.idEmpleadoPlanilla.exp,\r\n            elt.idEmpleadoPlanilla.fecha_nacimiento,\r\n            elt.idEmpleadoPlanilla.sexo,\r\n            elt.idEmpleadoPlanilla.ocupacion,\r\n            moment(elt.idEmpleadoPlanilla.fecha_ingreso).format(\"L\"),\r\n            elt.dias_pagados,\r\n            elt.idEmpleadoPlanilla.haber_basico.toFixed(2),\r\n            elt.total_dias_pagados.toFixed(2),\r\n            elt.bono_antiguedad.toFixed(2),\r\n            elt.horas_extras,\r\n            elt.importe_horas_extras,\r\n            elt.bono_produccion,\r\n            elt.otros_bonos,\r\n            elt.total_ganado.toFixed(2),\r\n            elt.monto_afp.toFixed(2),\r\n            elt.aporte_nal_solidario.toFixed(2),\r\n            elt.rc_iva,\r\n            elt.anticipos,\r\n            elt.otros_descuentos,\r\n            elt.total_descuentos.toFixed(2),\r\n            elt.liquido_pagable.toFixed(2)]);\r\n        let content = {\r\n            startY: 200,\r\n            head: headers,\r\n            body: data\r\n        };\r\n\r\n        doc.text(title, marginLeft, 40);\r\n        doc.autoTable(content);\r\n        doc.save(\"Planilla.pdf\")\r\n    }\r\n    editPlanilla=async()=>{\r\n        console.log('test !!')\r\n        await axios.post('http://localhost:4201/api/planilla-edit', this.state.form).then(response => {\r\n            console.log('test !!')\r\n            this.handleModal();\r\n            this.cargarDatos();\r\n        }).catch(error => {\r\n            console.log(error.message)\r\n        })\r\n    }\r\n  \r\n    cargarDatos() {\r\n        fetch('http://localhost:4201/api/planillas',\r\n            {\r\n                method: \"GET\",\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            })\r\n            .then((response) => {\r\n                return response.json()\r\n            })\r\n            .then((res) => {\r\n                console.log('result', res)\r\n                this.setState({\r\n                    planillaP: res.planillas\r\n                })\r\n            })\r\n            .catch(function (error) {\r\n                console.log('Hubo un problema con la petición:' + error.message);\r\n            });\r\n\r\n    }\r\n    componentDidMount() {\r\n        this.cargarDatos();\r\n        // fetch('http://localhost:4201/api/planilla-mayor')\r\n        //   .then(res => res.json())\r\n        //   .then(\r\n        //     (result) => {\r\n        //       this.setState({\r\n\r\n        //         planillaP: result.planillaP\r\n        //       });\r\n        //     },\r\n        //     (error) => {\r\n\r\n        //     }\r\n        //   )\r\n    }\r\n    render() {\r\n        const { planillaP } = this.state;\r\n        const { form } = this.state\r\n        console.log('testing', planillaP)\r\n        return (\r\n            <>\r\n                <h1>Planilla de sueldos</h1>\r\n                {/* <h5>Planilla detalle</h5> */}\r\n                <Card>\r\n                    <Card.Img variant=\"top\" src=\"holder.js/100px180\" />\r\n                    <Card.Body>\r\n                        <Card.Text>\r\n                         Detalle Planilla\r\n                         </Card.Text>\r\n                    </Card.Body>\r\n                </Card>\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <Table className=\"table-responsive\" striped bordered hover >\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Nombres</th>\r\n                            <th>Apellido Paterno</th>\r\n                            <th>Apellido Materno</th>\r\n                            <th>CI</th>\r\n                            <th>Exp</th>\r\n                            <th>Fecha de Nacimiento</th>\r\n                            <th>Sexo</th>\r\n                            <th>Ocupacion</th>\r\n                            <th>Fecha de Ingreso</th>\r\n                            <th>Fecha de Salida</th>\r\n                            <th>Dias Pagados</th>\r\n                            <th>Haber Basico</th>\r\n                            <th>Total Dias pagados</th>\r\n                            <th>Bono Antiguedad</th>\r\n                            <th>Horas Extras</th>\r\n                            <th>Importe Horas extras</th>\r\n                            <th>Bono Producción</th>\r\n                            <th>Otros Bonos</th>\r\n                            <th>Total Ganado</th>\r\n                            <th>Aporte NAcional Solidario</th>\r\n                            <th>RC IVA</th>\r\n                            <th>AFP</th>\r\n                            <th>Anticipos</th>\r\n                            <th>Otros Descuentos</th>\r\n                            <th>Total Descuentos</th>\r\n                            <th>Liquido pagable</th>\r\n                            <th>Minutos retraso</th>\r\n                            <th>Editar</th>\r\n                            <th> Boleta de pago</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {(planillaP) ?\r\n                            planillaP.map(item => (\r\n                                <tr key={item._id}>\r\n                                    <td>{item.idEmpleadoPlanilla.nombres}</td>\r\n                                    <td>{item.idEmpleadoPlanilla.apellidoP}</td>\r\n                                    <td>{item.idEmpleadoPlanilla.apellidoM}</td>\r\n                                    <td>{item.idEmpleadoPlanilla.CI}</td>\r\n                                    <td>{item.idEmpleadoPlanilla.exp}</td>\r\n                                    <td>{moment(item.idEmpleadoPlanilla.fecha_nacimiento).format(\"L\")}</td>\r\n                                    <td>{item.idEmpleadoPlanilla.sexo}</td>\r\n                                    <td>{item.idEmpleadoPlanilla.ocupacion}</td>\r\n                                    <td>{moment(item.idEmpleadoPlanilla.fecha_ingreso).format(\"L\")}</td>\r\n                                    <td>{item.idEmpleadoPlanilla.fecha_salida}</td>\r\n                                    <td>{item.dias_pagados}</td>\r\n                                    <td>{item.haber_basico}</td>\r\n                                    <td>{item.total_dias_pagados.toFixed(2)}</td>\r\n                                    <td>{item.bono_antiguedad.toFixed(3)}</td>\r\n                                    <td>{item.horas_extras}</td>\r\n                                    <td>{item.importe_horas_extras.toFixed(2)}</td>\r\n                                    <td>{item.bono_produccion}</td>\r\n                                    <td>{item.otros_bonos}</td>\r\n                                    <td>{item.total_ganado.toFixed(3)}</td>\r\n                                    <td>{item.aporte_nal_solidario.toFixed(2)}</td>\r\n                                    <td>{item.rc_iva}</td>\r\n                                    <td>{item.monto_afp.toFixed(3)}</td>\r\n                                    <td>{item.anticipos}</td>\r\n                                    <td>{item.otros_descuentos.toFixed(2)}</td>\r\n                                    <td>{item.total_descuentos.toFixed(2)}</td>\r\n                                    <td>{item.liquido_pagable.toFixed(2)}</td>\r\n                                    <td>{item.minutos_retraso}</td>\r\n                                    <button className=\"btn btn-primary\" onClick={() => {this.seleccionar(item);this.handleModal() }} > <FontAwesomeIcon icon={faEdit}></FontAwesomeIcon>   </button>\r\n                                    <td>  <button className=\"btn btn-success\"\r\n                                    onClick={(e) => this.printBoleta(item._id, e)}>\r\n                                    Boleta</button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))\r\n                            :\r\n                            <tr></tr>}\r\n                    </tbody>\r\n                </Table>\r\n                <Modal show={this.state.show} onHide={() => this.handleModal()} >\r\n                    <Modal.Header closeButton> Editar Planilla\r\n                            {/* <Modal.Title>Modal heading</Modal.Title> */}\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Form>\r\n                            <Row>\r\n                                <Col>\r\n                                    <Form.Group controlId=\"formBasicEmail\">\r\n                                        <Form.Label>Horas Extras</Form.Label>\r\n                                        <input type=\"text\" placeholder=\"horas_extras\" name=\"horas_extras\" onChange={this.handleChange} value={form ? form.horas_extras: ''} />\r\n                                    </Form.Group>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Form.Group controlId=\"formBasictext\">\r\n                                        <Form.Label>Bono Producción</Form.Label>\r\n                                        <input type=\"text\" placeholder=\"bono_produccion\" name=\"bono_produccion\" onChange={this.handleChange} value={form ? form.bono_produccion: ''} />\r\n                                    </Form.Group>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col>\r\n                                    <Form.Group controlId=\"formBasicEmail\">\r\n                                        <Form.Label>Otros Bonos</Form.Label>\r\n                                        <input type=\"text\" placeholder=\"otros_bonos\" name=\"otros_bonos\" onChange={this.handleChange} value={form ? form.otros_bonos: ''} />\r\n                                    </Form.Group>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Form.Group controlId=\"formBasicEmail\">\r\n                                        <Form.Label>Anticipos</Form.Label>\r\n                                        <input type=\"text\" placeholder=\"anticipos\" name=\"anticipos\" onChange={this.handleChange} value={form ? form.anticipos: ''} />\r\n                                    </Form.Group>\r\n                                </Col>\r\n                                {/* <Col>\r\n                                    <Form.Group controlId=\"formBasictext\">\r\n                                        <Form.Label> RC iva</Form.Label><br></br>\r\n                                        <input type=\"text\" placeholder=\"rc_iva\" name=\"rc_iva\" onChange={this.handleChange} value={form ? form.rc_iva: ''} />\r\n                                    </Form.Group>\r\n                                </Col> */}\r\n                            </Row>\r\n                            <Row>\r\n                                {/* <Col>\r\n                                    <Form.Group controlId=\"formBasicEmail\">\r\n                                        <Form.Label>Anticipos</Form.Label>\r\n                                        <input type=\"text\" placeholder=\"anticipos\" name=\"anticipos\" onChange={this.handleChange} value={form ? form.anticipos: ''} />\r\n                                    </Form.Group>\r\n                                </Col> */}\r\n                              \r\n                                <Col>\r\n                                    <Form.Group controlId=\"formBasicEmail\">\r\n                                        <Form.Label>Otros descuentos</Form.Label>\r\n                                        <input type=\"number\" placeholder=\"otros_descuentos\" name=\"otros_descuentos\" onChange={this.handleChange} value={form ? form.otros_descuentos: ''} />\r\n                                    </Form.Group>\r\n                                </Col>\r\n                                <Col></Col>\r\n                            </Row>\r\n                         \r\n\r\n                        </Form>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <button className=\"btn btn-danger\" onClick={() => { this.handleModal() }}>\r\n                            Cancelar\r\n                          </button>\r\n\r\n                            <button className=\"btn btn-success\" onClick={() => this.editPlanilla()} >\r\n                                Editar\r\n                           </button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n                <br /> <br />\r\n                <button className=\"btn btn-primary\" onClick={() => this.exportPDF()}>Imprimir Planilla</button>\r\n                <ExcelFile element={<button className=\"btn btn-success\">Exportar Excel</button>}>\r\n                <ExcelSheet data={this.state.planillaP} name=\"planillaP\">\r\n                    <ExcelColumn label=\"Dias Pagados\" value=\"dias_pagados\"/>\r\n                    <ExcelColumn label=\" Haber Básico\" value=\"haber_basico\"/>\r\n                    <ExcelColumn label=\"Total Dias Pagados\" value=\"total_dias_pagados\"/>\r\n                    <ExcelColumn label=\"Bono Antiguedad\" value=\"bono_antiguedad\"/>\r\n                    <ExcelColumn label=\"Horas Extras\" value=\"horas_extras\"/>\r\n                    <ExcelColumn label=\"Importe horas extras\" value=\"importe_horas_extras\"/>\r\n                    <ExcelColumn label=\"Bono Produccion\" value=\"bono_produccion\"/>\r\n                    <ExcelColumn label=\"Otros Bonos\" value=\"otros_bonos\"/>\r\n                    <ExcelColumn label=\"Total Ganado\" value=\"total_ganado\"/>\r\n                    <ExcelColumn label=\"Bono AFP\" value=\"monto_afp\"/>\r\n                    <ExcelColumn label=\" Aporte Nal. Solidario\" value=\"aporte_nal_solidario\"/>\r\n                    <ExcelColumn label=\"RC IVA\" value=\"rc_iva\"/>\r\n                    <ExcelColumn label=\"Anticipos\" value=\"anticipos\"/>\r\n                    <ExcelColumn label=\"Otros descuentos\" value=\"otros_descuentos\"/>\r\n                    <ExcelColumn label=\"Total Descuentps\" value=\"total_descuentos\"/>\r\n                    <ExcelColumn label=\"Líquido pagable\" value=\"liquido_pagable\"/>\r\n                    <ExcelColumn label=\"Minutos de retraso\" value=\"minutos_retraso\"/>\r\n                </ExcelSheet>\r\n            </ExcelFile>\r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default Planillas","D:\\ROBERTO\\PROYECTO KD\\react-front\\front\\src\\reportWebVitals.js",[],["135","136"],"D:\\ROBERTO\\PROYECTO KD\\react-front\\front\\src\\components\\Modal1.js",["137","138","139","140"],"D:\\ROBERTO\\PROYECTO KD\\react-front\\front\\src\\components\\Empleados\\EmpleadosMH.js",["141","142","143","144","145","146","147"],"import React, { Component } from 'react'\r\nimport { Table,  Modal, Container,ModalBody,ModalFooter, Button, Form, Row, Col } from 'react-bootstrap';\r\n//import \"bootstrap/dist/css/bootstrap.min.css\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons'\r\nimport axios from 'axios'\r\nimport moment from \"moment\";\r\n\r\nclass EmpleadosMH extends Component {\r\n    constructor(...props) {\r\n        super(...props);\r\n        this.state = {\r\n            empleadoMH: [], \r\n            show: false,\r\n            showModalEliminar:false ,\r\n            form: {\r\n                idusuario :\"\",\r\n                ocupacion:\"\",\r\n                fecha_ingreso:\"\",\r\n                fecha_salida:\"\", \r\n                tipoModal:\"\"\r\n            }\r\n        }\r\n    }\r\n    cargarDatos() {\r\n        fetch('http://localhost:4201/api/marca-hora',\r\n            {\r\n                method: \"GET\",\r\n                headers: {\r\n                            'Content-Type': 'application/json'\r\n                }\r\n            })\r\n            .then((response) => {\r\n                return response.json()\r\n            })\r\n            .then((res) => {\r\n                this.setState({\r\n                    empleadoMH: res.empleadoMH\r\n                })\r\n            })\r\n            .catch(function (error) {\r\n                console.log('Hubo un problema con la petición:' + error.message);\r\n            });\r\n    }\r\n    componentDidMount() {\r\n        this.cargarDatos();\r\n    }\r\n    handleModal() {\r\n        this.setState({ show: !this.state.show })\r\n    }\r\n\r\n    handleModalEliminar() {\r\n        this.setState({ show: !this.state.showModalEliminar })\r\n    }\r\n    //segundoPlano\r\n    handleChange = async e => {\r\n        e.persist();\r\n        await this.setState({\r\n            form:{\r\n            ...this.state.form,\r\n            [e.target.name]:e.target.value\r\n            }\r\n        })\r\n        console.log(this.state.form)\r\n    }\r\n    peticionPost=async()=>{\r\n        await axios.post('http://localhost:4201/api/empleado-planilla/registrar',this.state.form).then(response=>{\r\n            this.handleModal();\r\n            this.cargarDatos();\r\n        }).catch(error=>   {\r\n            console.log(error.message)\r\n        })\r\n        \r\n    }\r\n    seleccionarEmpleado=(empleado)=>{\r\n        console.log('test',empleado)\r\n        this.setState({\r\n            tipoModal:'actualizar',\r\n            form:{\r\n                idusuario:empleado.idusuario,\r\n                ocupacion:empleado.ocupacion,\r\n                fecha_ingreso:empleado.fecha_ingreso,\r\n                fecha_salida:empleado.fecha_salida  \r\n            }\r\n            \r\n        })\r\n        console.log('test',this.state.form)\r\n    }\r\n    peticionPut=()=>{\r\n        axios.put('')\r\n    }\r\n    peticionDelete=()=>{\r\n            axios.delete('http://localhost:4201/api/empleado-planilla'+this.state.form._id).then(response=>{\r\n                this.setState({modalEliminar:false});\r\n                this.cargarDatos();\r\n            })\r\n    }\r\n    render() {\r\n        const { empleadoMH } = this.state;\r\n        const {form}=this.state\r\n\r\n        return (\r\n            <>\r\n                <Container>\r\n                    <h2>MARCADO DE HORAS</h2>\r\n                    <br />\r\n                    \r\n                    <br /> \r\n                    <br />\r\n                    <Table striped bordered hover variant=\"dark\">\r\n                        <thead>\r\n                            <tr>\r\n                                {/* <th>Nombres</th> */}\r\n                                <th>Apellido Paterno</th>\r\n                                <th>Apellido Materno</th>\r\n                                {/* <th>IDempresa</th> */}\r\n                                <th>Horario entrada (Mañana)</th>\r\n                                <th>Horario salida (Mañana)</th>\r\n                                <th>Horario entrada (TARDE)</th>\r\n                                <th>Horario salida(TARDE)</th>\r\n                                {/* <th>Fecha</th> */}\r\n\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                (empleadoMH)\r\n                                    ?\r\n                                    empleadoMH.map(item => (\r\n\r\n                                        <tr key={item._id}>\r\n                                            {/* <td>{item.idEmpleado.nombres}</td> */}\r\n                                            <td>{item.idEmpleado.apellidoP}</td>\r\n                                            <td>{item.idEmpleado.apellidoM}</td>\r\n                                            {/* <td>{item.idEmpresa}</td> */}\r\n                                            <td>{ (item.marcaH1)\r\n                                                 ?      moment(item.marcaH1).format('LT'):'No registrado'}</td>\r\n                                            <td>{(item.marcaH2)\r\n                                                 ? moment(item.marcaH2).format('LT'):'No registrado'}</td>\r\n                                            <td>{(item.marcaH3)\r\n                                                 ? moment(item.marcaH3).format('LT'):'No registrado'}</td>\r\n                                            <td>{(item.marcaH4)\r\n                                                ? moment(item.marcaH4).format('LT'):'No registrado'}</td>\r\n                                            {/* <td>{ moment(item.fechaRegistro).format('L')}</td> */}\r\n                                            {/* <td>\r\n                                                <button className=\"btn btn-primary\" onClick={()=>this.seleccionarEmpleado(item)} > <FontAwesomeIcon icon={faEdit}></FontAwesomeIcon>   </button>\r\n                                                {\"   \"}\r\n                                            </td> */}\r\n                                        </tr>\r\n                                    ))\r\n                                    :\r\n                                    <tr></tr>}\r\n                        </tbody>\r\n                    </Table>\r\n                    <Modal show={this.state.show} onHide={() => this.handleModal()} >\r\n                        <Modal.Header closeButton> Agregar Empleado\r\n                            {/* <Modal.Title>Modal heading</Modal.Title> */}\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <Form>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Form.Group controlId=\"formBasicEmail\">\r\n                                            <Form.Label>Id Usuario</Form.Label>\r\n                                            <input type=\"text\" placeholder=\"Id Usuario\" name=\"idusuario\" onChange={this.handleChange}value  = {form ?form.idusuario:''} />\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Form.Group controlId=\"formBasictext\">\r\n                                            <Form.Label>Ocupación</Form.Label>\r\n                                            <input type=\"text\" placeholder=\"Ocupacion\"name=\"ocupacion\" onChange={this.handleChange}value  = {form? form.ocupacion:''}/>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Form.Group controlId=\"formBasictext\">\r\n                                            <Form.Label>Fecha Inicio </Form.Label>\r\n                                            <input type=\"date\"name=\"fecha_ingreso\" onChange={this.handleChange}value  = { form ?form.fecha_ingreso:'' }/>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Form.Group controlId=\"formBasictext\">\r\n                                            <Form.Label>Fecha Fin </Form.Label>\r\n                                            <input type=\"date\" name=\"fecha_salida\"onChange={this.handleChange}value  = {form ?form.fecha_salida:''}/>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Form>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <button className=\"btn btn-danger\"  onClick={() => { this.handleModal() }}>\r\n                                Cancelar\r\n                          </button>\r\n                          {this.state.tipoModal=='insertar'?\r\n                            <button className=\"btn btn-succes\"  onClick={()=>this.peticionPost()} >\r\n                                Insertar\r\n                           </button>:\r\n                           <button className=\"btn btn-primary\"  >\r\n                                Actualizar\r\n                             </button>\r\n                           }\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n             \r\n                </Container>\r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default EmpleadosMH","D:\\ROBERTO\\PROYECTO KD\\react-front\\front\\src\\screens\\ProductSreen.js",["148"],"D:\\ROBERTO\\PROYECTO KD\\react-front\\front\\src\\products.js",[],"D:\\ROBERTO\\PROYECTO KD\\react-front\\front\\src\\components\\test.js",["149","150","151"],"import React, { Component } from 'react'\r\nimport { Table, Card } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n\r\n//import products from '../planilla/products'\r\nclass Planillas extends Component {\r\n    constructor(...props) {\r\n        super(...props);\r\n        this.state = {\r\n            planillaP: [],\r\n        }\r\n    }\r\n  \r\n    cargarDatos() {\r\n        fetch('http://localhost:4201/api/empresa-calendario/600899bbec174a336873c45e',\r\n            {\r\n                method: \"GET\",\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            })\r\n            .then((response) => {\r\n                return response.json()\r\n            })\r\n            .then((res) => {\r\n                console.log('result', res)\r\n                this.setState({\r\n                    planillaP: res.data.detalles\r\n                })\r\n            })\r\n            .catch(function (error) {\r\n                console.log('Hubo un problema con la petición:' + error.message);\r\n            });\r\n\r\n    }\r\n    componentDidMount() {\r\n        this.cargarDatos();\r\n    }\r\n    render() {\r\n        const { planillaP } = this.state;\r\n        // console.log('testing', planillaP)\r\n        return (\r\n            <>\r\n                <h3>Lista de Horarios mensuales</h3>\r\n                <br />       <br />       <br />\r\n                <Table striped bordered hover variant=\"dark\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Dia</th>\r\n                            <th>Horario mañana</th>\r\n                            <th>Horario mañana</th>\r\n                            <th>Horario tarde</th>\r\n                            <th>Horario tarde</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            (planillaP)\r\n                                ?\r\n                                planillaP.map(item => (\r\n                                    <tr key={item._id}>\r\n                                     <td>{item.dia}</td>\r\n                                        <td>{item.idTipoHorario.horario1H}:{item.idTipoHorario.horario1M}</td> \r\n                                    \r\n                                        <td>{item.idTipoHorario.horario2H}:{item.idTipoHorario.horario2M}</td> \r\n                                 \r\n                                        <td>{item.idTipoHorario.horario3H}:{item.idTipoHorario.horario3M}</td> \r\n                                    \r\n                                        <td>{item.idTipoHorario.horario4H}:{item.idTipoHorario.horario4M}</td> \r\n                                                                        \r\n                                    </tr>\r\n\r\n                                ))\r\n                                :\r\n                                <tr></tr>}\r\n                    </tbody>\r\n                </Table>\r\n             \r\n     \r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default Planillas","D:\\ROBERTO\\PROYECTO KD\\react-front\\front\\src\\components\\Calendario\\IndexCalendario.js",[],"D:\\ROBERTO\\PROYECTO KD\\react-front\\front\\src\\screens\\HomeScreen.js",["152","153","154"],"import React, { useState, useEffect } from 'react'\r\nimport { Row, Col, Table } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\n//import Product from '../components/Product'\r\nimport products from '../products'\r\nimport Rating from '../components/Rating'\r\nimport axios from 'axios'\r\n\r\nconst HomeScreen = () => {\r\n    const [products, setProducts] = useState([])\r\n    useEffect(() => {\r\n        const fetchProducts = async () => {\r\n            const { data } = await axios.get('https://reqres.in/api/users')\r\n            //const result = JSON.stringify({ data });\r\n            console.log('test :', data)\r\n            setProducts(data)\r\n        }\r\n        fetchProducts()\r\n    }, [])\r\n\r\n   \r\n    return (\r\n        <>\r\n            <Table striped bordered hover>\r\n                <thead>\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th>First Name</th>\r\n                        <th>Last Name</th>\r\n                        <th>Username</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {/* <Product product={product}/> */}\r\n                    {products.map((product) => (\r\n                        <tr key={product._id}>\r\n                            <td>\r\n                                <Link to={`/planillas/${product._id}`} >  {product.name}</Link>\r\n\r\n                            </td>\r\n                            <td>\r\n                                {product.brand}\r\n                            </td>\r\n                            <td>\r\n                                <Rating\r\n                                    value={product.rating}\r\n                                    text={`${product.numReviews} reviews`} />\r\n                            </td>\r\n                            <td>\r\n                                {product.test.nombre}\r\n\r\n                            </td>\r\n\r\n                        </tr>))}\r\n\r\n\r\n\r\n                    {/* <h1>Latest Prodcuts</h1>\r\n                <Row> \r\n                    {products.map((product)=>(\r\n                        <Col sm={12} md={6} lg={4} xl={3}>\r\n                                    <h2>{product.name}</h2>\r\n                            <Product product={product}/>\r\n                        </Col>\r\n                    ))}\r\n                    \r\n                </Row> */}\r\n                    {/* <tr>\r\n                    <td>{product.name}</td>\r\n                    <td>{product.brand}</td>\r\n                    <td>{product.price}</td>\r\n                    <td>{product.category}</td>\r\n                </tr>\r\n             */}\r\n                </tbody>\r\n            </Table>\r\n\r\n            {/* <h1>Latest Prodcuts</h1>\r\n                <Row> \r\n                    {products.map((product)=>(\r\n                        <Col sm={12} md={6} lg={4} xl={3}>\r\n                                    <h2>{product.name}</h2>\r\n                            <Product product={product}/>\r\n                        </Col>\r\n                    ))}\r\n                    \r\n                </Row> */}\r\n\r\n        </>\r\n    )\r\n}\r\nexport default HomeScreen","D:\\ROBERTO\\PROYECTO KD\\react-front\\front\\src\\components\\excel.js",[],{"ruleId":"155","severity":1,"message":"156","line":6,"column":8,"nodeType":"157","messageId":"158","endLine":6,"endColumn":17},{"ruleId":"155","severity":1,"message":"156","line":6,"column":8,"nodeType":"157","messageId":"158","endLine":6,"endColumn":17},{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","replacedBy":"162"},{"ruleId":"155","severity":1,"message":"163","line":2,"column":10,"nodeType":"157","messageId":"158","endLine":2,"endColumn":19},{"ruleId":"155","severity":1,"message":"164","line":2,"column":21,"nodeType":"157","messageId":"158","endLine":2,"endColumn":26},{"ruleId":"155","severity":1,"message":"165","line":2,"column":28,"nodeType":"157","messageId":"158","endLine":2,"endColumn":37},{"ruleId":"155","severity":1,"message":"166","line":2,"column":39,"nodeType":"157","messageId":"158","endLine":2,"endColumn":45},{"ruleId":"159","replacedBy":"167"},{"ruleId":"161","replacedBy":"168"},{"ruleId":"155","severity":1,"message":"163","line":2,"column":24,"nodeType":"157","messageId":"158","endLine":2,"endColumn":33},{"ruleId":"155","severity":1,"message":"169","line":2,"column":35,"nodeType":"157","messageId":"158","endLine":2,"endColumn":44},{"ruleId":"155","severity":1,"message":"170","line":2,"column":46,"nodeType":"157","messageId":"158","endLine":2,"endColumn":57},{"ruleId":"155","severity":1,"message":"166","line":2,"column":59,"nodeType":"157","messageId":"158","endLine":2,"endColumn":65},{"ruleId":"155","severity":1,"message":"171","line":5,"column":18,"nodeType":"157","messageId":"158","endLine":5,"endColumn":28},{"ruleId":"172","severity":1,"message":"173","line":272,"column":47,"nodeType":"174","messageId":"175","endLine":272,"endColumn":49},{"ruleId":"155","severity":1,"message":"176","line":12,"column":8,"nodeType":"157","messageId":"158","endLine":12,"endColumn":12},{"ruleId":"155","severity":1,"message":"177","line":14,"column":8,"nodeType":"157","messageId":"158","endLine":14,"endColumn":18},{"ruleId":"155","severity":1,"message":"169","line":2,"column":35,"nodeType":"157","messageId":"158","endLine":2,"endColumn":44},{"ruleId":"155","severity":1,"message":"170","line":2,"column":46,"nodeType":"157","messageId":"158","endLine":2,"endColumn":57},{"ruleId":"155","severity":1,"message":"166","line":2,"column":59,"nodeType":"157","messageId":"158","endLine":2,"endColumn":65},{"ruleId":"155","severity":1,"message":"178","line":3,"column":10,"nodeType":"157","messageId":"158","endLine":3,"endColumn":23},{"ruleId":"155","severity":1,"message":"179","line":3,"column":25,"nodeType":"157","messageId":"158","endLine":3,"endColumn":30},{"ruleId":"155","severity":1,"message":"180","line":7,"column":10,"nodeType":"157","messageId":"158","endLine":7,"endColumn":25},{"ruleId":"155","severity":1,"message":"181","line":8,"column":10,"nodeType":"157","messageId":"158","endLine":8,"endColumn":16},{"ruleId":"155","severity":1,"message":"171","line":8,"column":18,"nodeType":"157","messageId":"158","endLine":8,"endColumn":28},{"ruleId":"155","severity":1,"message":"182","line":10,"column":8,"nodeType":"157","messageId":"158","endLine":10,"endColumn":14},{"ruleId":"172","severity":1,"message":"173","line":319,"column":51,"nodeType":"174","messageId":"175","endLine":319,"endColumn":53},{"ruleId":"155","severity":1,"message":"163","line":2,"column":23,"nodeType":"157","messageId":"158","endLine":2,"endColumn":32},{"ruleId":"155","severity":1,"message":"171","line":8,"column":18,"nodeType":"157","messageId":"158","endLine":8,"endColumn":28},{"ruleId":"159","replacedBy":"183"},{"ruleId":"161","replacedBy":"184"},{"ruleId":"155","severity":1,"message":"185","line":2,"column":17,"nodeType":"157","messageId":"158","endLine":2,"endColumn":26},{"ruleId":"155","severity":1,"message":"181","line":4,"column":10,"nodeType":"157","messageId":"158","endLine":4,"endColumn":16},{"ruleId":"155","severity":1,"message":"186","line":7,"column":12,"nodeType":"157","messageId":"158","endLine":7,"endColumn":18},{"ruleId":"155","severity":1,"message":"187","line":7,"column":20,"nodeType":"157","messageId":"158","endLine":7,"endColumn":29},{"ruleId":"155","severity":1,"message":"169","line":2,"column":35,"nodeType":"157","messageId":"158","endLine":2,"endColumn":44},{"ruleId":"155","severity":1,"message":"170","line":2,"column":45,"nodeType":"157","messageId":"158","endLine":2,"endColumn":56},{"ruleId":"155","severity":1,"message":"166","line":2,"column":58,"nodeType":"157","messageId":"158","endLine":2,"endColumn":64},{"ruleId":"155","severity":1,"message":"180","line":4,"column":10,"nodeType":"157","messageId":"158","endLine":4,"endColumn":25},{"ruleId":"155","severity":1,"message":"181","line":5,"column":10,"nodeType":"157","messageId":"158","endLine":5,"endColumn":16},{"ruleId":"155","severity":1,"message":"171","line":5,"column":18,"nodeType":"157","messageId":"158","endLine":5,"endColumn":28},{"ruleId":"172","severity":1,"message":"173","line":195,"column":48,"nodeType":"174","messageId":"175","endLine":195,"endColumn":50},{"ruleId":"155","severity":1,"message":"188","line":3,"column":52,"nodeType":"157","messageId":"158","endLine":3,"endColumn":63},{"ruleId":"155","severity":1,"message":"189","line":2,"column":17,"nodeType":"157","messageId":"158","endLine":2,"endColumn":21},{"ruleId":"155","severity":1,"message":"190","line":3,"column":8,"nodeType":"157","messageId":"158","endLine":3,"endColumn":13},{"ruleId":"155","severity":1,"message":"191","line":4,"column":8,"nodeType":"157","messageId":"158","endLine":4,"endColumn":13},{"ruleId":"155","severity":1,"message":"192","line":2,"column":10,"nodeType":"157","messageId":"158","endLine":2,"endColumn":13},{"ruleId":"155","severity":1,"message":"193","line":2,"column":15,"nodeType":"157","messageId":"158","endLine":2,"endColumn":18},{"ruleId":"155","severity":1,"message":"194","line":5,"column":8,"nodeType":"157","messageId":"158","endLine":5,"endColumn":16},"no-unused-vars","'bootstrap' is defined but never used.","Identifier","unusedVar","no-native-reassign",["195"],"no-negated-in-lhs",["196"],"'Container' is defined but never used.","'Table' is defined but never used.","'Jumbotron' is defined but never used.","'Button' is defined but never used.",["195"],["196"],"'ModalBody' is defined but never used.","'ModalFooter' is defined but never used.","'faTrashAlt' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Test' is defined but never used.","'HomeScreen' is defined but never used.","'BrowserRouter' is defined but never used.","'Route' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'faEdit' is defined but never used.","'Modal1' is defined but never used.",["195"],["196"],"'useEffect' is defined but never used.","'lgShow' is assigned a value but never used.","'setLgShow' is assigned a value but never used.","'CardColumns' is defined but never used.","'Card' is defined but never used.","'axios' is defined but never used.","'jsPDF' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'products' is defined but never used.","no-global-assign","no-unsafe-negation"]